<?php
/**
 * This file was generated by Atlas. Changes will be overwritten.
 */
declare(strict_types=1);

namespace LiveryManager\DB\Livery\_generated;

use Atlas\Mapper\Mapper;
use LiveryManager\DB\Livery\LiveryRecord;
use LiveryManager\DB\Livery\LiveryRecordSet;
use LiveryManager\DB\Livery\LiveryRelated;
use LiveryManager\DB\Livery\LiverySelect;
use LiveryManager\DB\Livery\LiveryTable;

/**
 * @method LiveryTable getTable()
 * @method ?LiveryRecord fetchRecord(mixed $primaryVal, array $loadRelated = [])
 * @method ?LiveryRecord fetchRecordBy(array $whereEquals, array $loadRelated = [])
 * @method LiveryRecord[] fetchRecords(array $primaryVals, array $loadRelated = [])
 * @method LiveryRecord[] fetchRecordsBy(array $whereEquals, array $loadRelated = [])
 * @method LiveryRecordSet fetchRecordSet(array $primaryVals, array $loadRelated = [])
 * @method LiveryRecordSet fetchRecordSetBy(array $whereEquals, array $loadRelated = [])
 * @method LiverySelect select(array $whereEquals = [])
 * @method LiveryRecord newRecord(array $fields = [])
 * @method LiveryRecord[] newRecords(array $fieldSets)
 * @method LiveryRecordSet newRecordSet(LiveryRecord[] $records = [])
 * @method LiveryRecord turnRowIntoRecord(LiveryRow $row, array $loadRelated = [])
 * @method LiveryRecord[] turnRowsIntoRecords(LiveryRow[] $rows, array $loadRelated = [])
 */
abstract class Livery_ extends Mapper
{
    public const RECORD_CLASS = LiveryRecord::CLASS;
    public const RECORD_SET_CLASS = LiveryRecordSet::CLASS;
    public const RELATED_CLASS = LiveryRelated::CLASS;
    public const SELECT_CLASS = LiverySelect::CLASS;
}
