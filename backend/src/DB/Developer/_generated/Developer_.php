<?php
/**
 * This file was generated by Atlas. Changes will be overwritten.
 */
declare(strict_types=1);

namespace LiveryManager\DB\Developer\_generated;

use Atlas\Mapper\Mapper;
use LiveryManager\DB\Developer\DeveloperRecord;
use LiveryManager\DB\Developer\DeveloperRecordSet;
use LiveryManager\DB\Developer\DeveloperRelated;
use LiveryManager\DB\Developer\DeveloperSelect;
use LiveryManager\DB\Developer\DeveloperTable;

/**
 * @method DeveloperTable getTable()
 * @method ?DeveloperRecord fetchRecord(mixed $primaryVal, array $loadRelated = [])
 * @method ?DeveloperRecord fetchRecordBy(array $whereEquals, array $loadRelated = [])
 * @method DeveloperRecord[] fetchRecords(array $primaryVals, array $loadRelated = [])
 * @method DeveloperRecord[] fetchRecordsBy(array $whereEquals, array $loadRelated = [])
 * @method DeveloperRecordSet fetchRecordSet(array $primaryVals, array $loadRelated = [])
 * @method DeveloperRecordSet fetchRecordSetBy(array $whereEquals, array $loadRelated = [])
 * @method DeveloperSelect select(array $whereEquals = [])
 * @method DeveloperRecord newRecord(array $fields = [])
 * @method DeveloperRecord[] newRecords(array $fieldSets)
 * @method DeveloperRecordSet newRecordSet(DeveloperRecord[] $records = [])
 * @method DeveloperRecord turnRowIntoRecord(DeveloperRow $row, array $loadRelated = [])
 * @method DeveloperRecord[] turnRowsIntoRecords(DeveloperRow[] $rows, array $loadRelated = [])
 */
abstract class Developer_ extends Mapper
{
    public const RECORD_CLASS = DeveloperRecord::CLASS;
    public const RECORD_SET_CLASS = DeveloperRecordSet::CLASS;
    public const RELATED_CLASS = DeveloperRelated::CLASS;
    public const SELECT_CLASS = DeveloperSelect::CLASS;
}
