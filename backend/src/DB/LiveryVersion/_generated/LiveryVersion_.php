<?php
/**
 * This file was generated by Atlas. Changes will be overwritten.
 */
declare(strict_types=1);

namespace LiveryManager\DB\LiveryVersion\_generated;

use Atlas\Mapper\Mapper;
use LiveryManager\DB\LiveryVersion\LiveryVersionRecord;
use LiveryManager\DB\LiveryVersion\LiveryVersionRecordSet;
use LiveryManager\DB\LiveryVersion\LiveryVersionRelated;
use LiveryManager\DB\LiveryVersion\LiveryVersionSelect;
use LiveryManager\DB\LiveryVersion\LiveryVersionTable;

/**
 * @method LiveryVersionTable getTable()
 * @method ?LiveryVersionRecord fetchRecord(mixed $primaryVal, array $loadRelated = [])
 * @method ?LiveryVersionRecord fetchRecordBy(array $whereEquals, array $loadRelated = [])
 * @method LiveryVersionRecord[] fetchRecords(array $primaryVals, array $loadRelated = [])
 * @method LiveryVersionRecord[] fetchRecordsBy(array $whereEquals, array $loadRelated = [])
 * @method LiveryVersionRecordSet fetchRecordSet(array $primaryVals, array $loadRelated = [])
 * @method LiveryVersionRecordSet fetchRecordSetBy(array $whereEquals, array $loadRelated = [])
 * @method LiveryVersionSelect select(array $whereEquals = [])
 * @method LiveryVersionRecord newRecord(array $fields = [])
 * @method LiveryVersionRecord[] newRecords(array $fieldSets)
 * @method LiveryVersionRecordSet newRecordSet(LiveryVersionRecord[] $records = [])
 * @method LiveryVersionRecord turnRowIntoRecord(LiveryVersionRow $row, array $loadRelated = [])
 * @method LiveryVersionRecord[] turnRowsIntoRecords(LiveryVersionRow[] $rows, array $loadRelated = [])
 */
abstract class LiveryVersion_ extends Mapper
{
    public const RECORD_CLASS = LiveryVersionRecord::CLASS;
    public const RECORD_SET_CLASS = LiveryVersionRecordSet::CLASS;
    public const RELATED_CLASS = LiveryVersionRelated::CLASS;
    public const SELECT_CLASS = LiveryVersionSelect::CLASS;
}
